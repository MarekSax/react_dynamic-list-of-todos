{"version":3,"sources":["types/FilterValues.ts","types/KeyboardKeys.ts","signals.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterValues","KeyboardKeys","todos","signal","selectedTodo","user","searchQuery","filterValue","all","filteredTodos","computed","value","filter","todo","completed","active","title","toLowerCase","includes","TodoList","useSignals","className","map","classNames","id","type","onClick","TodoFilter","onChange","e","target","placeholder","onKeyDown","key","Enter","preventDefault","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","modalLoading","effect","userId","t","TodoModal","href","email","name","loading","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5617d712.chunk.js","sourcesContent":["export enum FilterValues {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n\nexport type FilterValuesType = keyof typeof FilterValues;\n","export enum KeyboardKeys {\n  Enter = 'Enter',\n  Escape = 'Escape',\n}\n","import { signal } from '@preact/signals-react';\nimport { Todo } from './types/Todo';\nimport { FilterValues, FilterValuesType, User } from './types';\n\nexport const todos = signal<Todo[]>([]);\nexport const selectedTodo = signal<Todo | null>(null);\nexport const user = signal<User | null>(null);\nexport const searchQuery = signal<string>('');\nexport const filterValue = signal<FilterValuesType>(FilterValues.all);\n","import { useSignals } from '@preact/signals-react/runtime';\nimport { computed } from '@preact/signals-react';\nimport classNames from 'classnames';\nimport {\n  filterValue, searchQuery, selectedTodo, todos,\n} from '../../signals';\nimport { FilterValues } from '../../types';\n\nconst filteredTodos = computed(() => {\n  return todos.value\n    .filter(todo => {\n      switch (filterValue.value) {\n        default:\n        case FilterValues.all:\n          return todo;\n        case FilterValues.completed:\n          return todo.completed;\n        case FilterValues.active:\n          return !todo.completed;\n      }\n    })\n    .filter(todo => todo.title\n      .toLowerCase().includes(searchQuery.value.toLowerCase()));\n});\n\nexport const TodoList: React.FC = () => {\n  useSignals();\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.value\n          .map((todo) => (\n            <tr\n              data-cy=\"todo\"\n              className={classNames(\n                { 'has-background-info-light': selectedTodo.value },\n              )}\n              key={todo.id}\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(`has-text-${todo.completed ? 'success' : 'danger'}`)}>{todo.title}</p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    selectedTodo.value = todo;\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames('far', `fa-eye${todo.id === selectedTodo.value?.id ? '-slash' : ''}`)} />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useSignals } from '@preact/signals-react/runtime';\nimport { FilterValues, FilterValuesType, KeyboardKeys } from '../../types';\nimport { filterValue, searchQuery } from '../../signals';\n\nexport const TodoFilter: React.FC = () => {\n  useSignals();\n\n  const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    searchQuery.value = e.target.value;\n  };\n\n  const handleFilterValue = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    filterValue.value = e.target.value as FilterValuesType;\n  };\n\n  const handleResetQuery = () => {\n    searchQuery.value = '';\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleFilterValue}>\n            <option value={FilterValues.all}>\n              All\n            </option>\n            <option value={FilterValues.active}>\n              Active\n            </option>\n            <option value={FilterValues.completed}>\n              Complete\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery.value}\n          onChange={handleInput}\n          onKeyDown={e => e.key === KeyboardKeys.Enter && e.preventDefault()}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!searchQuery.value.length && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleResetQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import { useSignals } from '@preact/signals-react/runtime';\nimport { effect, signal } from '@preact/signals-react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { selectedTodo, user } from '../../signals';\n\nconst modalLoading = signal<boolean>(true);\n\neffect(() => {\n  if (selectedTodo.value) {\n    getUser(selectedTodo.value.userId)\n      .then(t => {\n        user.value = t;\n      })\n      .then(() => {\n        modalLoading.value = false;\n      });\n  }\n});\n\nexport const TodoModal: React.FC = () => {\n  useSignals();\n\n  const handleCloseModal = () => {\n    selectedTodo.value = null;\n    user.value = null;\n    modalLoading.value = true;\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {modalLoading.value ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.value?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.value?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.value?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.value?.email}`}>\n                {user.value?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { effect, signal } from '@preact/signals-react';\nimport { useSignals } from '@preact/signals-react/runtime';\nimport { StrictMode } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { selectedTodo, todos } from './signals';\n\nconst loading = signal<boolean>(true);\n\neffect(() => {\n  getTodos()\n    .then(t => {\n      todos.value = t;\n    })\n    .then(() => {\n      loading.value = false;\n    });\n});\n\nexport const App: React.FC = () => {\n  useSignals();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading.value ? <Loader /> : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n      <StrictMode>\n        {!!selectedTodo.value && <TodoModal />}\n      </StrictMode>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}